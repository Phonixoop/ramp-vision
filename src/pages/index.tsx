import { useFormik } from "formik";
import {
  CheckCheckIcon,
  CheckIcon,
  KeySquareIcon,
  Loader2Icon,
  UserCog2,
  UserIcon,
} from "lucide-react";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useState } from "react";
import { toFormikValidationSchema } from "zod-formik-adapter";
import Menu from "~/features/menu";
import MultiStep from "~/features/multi-step";
import { ThemeBoxHovery } from "~/features/theme-box";
import {
  createUserSchema,
  userLoginSchema,
} from "~/server/validations/user.validation";
import BlurBackground from "~/ui/blur-backgrounds";
import Button from "~/ui/buttons";
import { Container } from "~/ui/containers";
import InputError from "~/ui/forms/input-error";
import PasswordField from "~/ui/forms/password-field";
import TextField from "~/ui/forms/text-field";
import withLabel from "~/ui/forms/with-label";

import { api } from "~/utils/api";

const menu = [
  {
    value: "خانه",
    link: "/",
  },
  {
    value: "درباره ویژن",
    link: "atysa.ir",
  },
  {
    value: "داشبورد",
    link: "/dashboard",
  },
];
export default function Home() {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });
  // const users = api.example.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BlurBackground />
      <div className="flex min-h-screen w-full flex-col items-center justify-between bg-secondary transition-colors duration-1000 ">
        <Container
          className="flex  flex-col items-center justify-between py-5"
          rtl={true}
        >
          <div className="flex items-center  justify-center gap-4 ">
            <AuthShowcase />
            <Menu rootPath="/" list={menu} />
          </div>
        </Container>

        <ThemeBoxHovery />
      </div>
    </>
  );
}
function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <>
      <Button
        className="flex items-stretch justify-center gap-2 rounded-full bg-secbuttn stroke-accent px-3 text-accent"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        <span className="pt-1">
          {sessionData ? sessionData.user.username : "ورود"}
        </span>
        <span>
          <UserCog2 />
        </span>
      </Button>
    </>
  );
}
